//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TouchpadPeace2010_40 {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TouchpadPeace2010_40.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Did you knowTouchpadPeace saved {0} touchpad annoyances already?  Purchase your permanent license before your free-trial expires!
        ///This is trial day {1} of {2}..
        /// </summary>
        internal static string ActivationBoxInfoTemplate {
            get {
                return ResourceManager.GetString("ActivationBoxInfoTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Request Status: {0}..
        /// </summary>
        internal static string ActivationRequestStatusTemplate {
            get {
                return ResourceManager.GetString("ActivationRequestStatusTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Touchpad Peace has been successfully activated..
        /// </summary>
        internal static string ActivationSuccessful {
            get {
                return ResourceManager.GetString("ActivationSuccessful", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your TouchpadPeace license has not been activated for this machine..
        /// </summary>
        internal static string HWMismatchInLicense {
            get {
                return ResourceManager.GetString("HWMismatchInLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license file is invalid.  You must activateTouchpadPeace with a new license file..
        /// </summary>
        internal static string InvalidSignatureLicense {
            get {
                return ResourceManager.GetString("InvalidSignatureLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your license is no longer valid.  Please contact customer support for reactivation..
        /// </summary>
        internal static string LicenseBlocked {
            get {
                return ResourceManager.GetString("LicenseBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The license file is invalid.  Touchpad Peace not activated..
        /// </summary>
        internal static string LicenseFileInvalid {
            get {
                return ResourceManager.GetString("LicenseFileInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &amp;Purchase and/or Activate.
        /// </summary>
        internal static string MenuOptionActivations {
            get {
                return ResourceManager.GetString("MenuOptionActivations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License file not found.  You must activate the product with a license..
        /// </summary>
        internal static string NoLicenseFile {
            get {
                return ResourceManager.GetString("NoLicenseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Touchpad Peace Licens File.
        /// </summary>
        internal static string OpenTouchpadLicenseFile {
            get {
                return ResourceManager.GetString("OpenTouchpadLicenseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to E&amp;xit.
        /// </summary>
        internal static string QuitString {
            get {
                return ResourceManager.GetString("QuitString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TouchpadPeace
        /// Saved {0} touchpad annoyances..
        /// </summary>
        internal static string ReportTemplate {
            get {
                return ResourceManager.GetString("ReportTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your hardware id is {0}..
        /// </summary>
        internal static string ShowHardwareIdTemplate {
            get {
                return ResourceManager.GetString("ShowHardwareIdTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License status is {0}.
        /// </summary>
        internal static string ShowLicenseStatusTemplate {
            get {
                return ResourceManager.GetString("ShowLicenseStatusTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This trial version is good for {0} days.   This is day {1}..
        /// </summary>
        internal static string TemplateExpirationDays {
            get {
                return ResourceManager.GetString("TemplateExpirationDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This trial version was good for {0} days.  It is now expired..
        /// </summary>
        internal static string TemplateExpiredDays {
            get {
                return ResourceManager.GetString("TemplateExpiredDays", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About 15 seconds after your purchase is complete, you 
        ///can click this button, and Touchpad Peace will activate 
        ///online..
        /// </summary>
        internal static string TooltipActivateButton {
            get {
                return ResourceManager.GetString("TooltipActivateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you cancel this dialog without a valid license,
        ///the application will terminate.  If you are within the free 
        ///trial period, Touchpad Peace will continue to run..
        /// </summary>
        internal static string TooltipCancelButton {
            get {
                return ResourceManager.GetString("TooltipCancelButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This button will let you open the license file you
        ///received by email after your purchase.  You can also activate
        ///Touchpad Peace using the &apos;Activate&apos; button..
        /// </summary>
        internal static string TooltipOpenLicenseFile {
            get {
                return ResourceManager.GetString("TooltipOpenLicenseFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This button will navigate your browser to the paypal payment 
        ///page.  After payment, you can either activate the license 
        ///online, or with the license file you receive by email..
        /// </summary>
        internal static string TooltipPurchaseButton {
            get {
                return ResourceManager.GetString("TooltipPurchaseButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TouchpadPeace is already running.  This instance will terminate..
        /// </summary>
        internal static string TouchpadPeaceInstanceFound {
            get {
                return ResourceManager.GetString("TouchpadPeaceInstanceFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ... is now running..
        /// </summary>
        internal static string TouchpadPeaceStarted {
            get {
                return ResourceManager.GetString("TouchpadPeaceStarted", resourceCulture);
            }
        }
    }
}
